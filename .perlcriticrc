verbose = 9

# Sigh.  Perl::Critic::Community is nice, but the alias with Freenode just means
# there's a fair bit if duplication.  Annoying.
exclude = Freenode

#safari = 1

# Minimum length of regex before whining about /x
# Default is 0
[RegularExpressions::RequireExtendedFormatting]
minimum_regex_length_to_complain_about = 45
# Refuses unescaped spaces in regex, useful when using /x flag
# strict = 1
# Don't complain about certain postfix control structures
# until when unless when while also available
[ControlStructures::ProhibitPostfixControls]
allow = for if
# Allow more space before closing filehandles
# Presumably should use more subroutines.  Default is 5.
[InputOutput::RequireBriefOpen]
lines = 20
# Don't whine for numbers above 0, 1, and 2
[ValuesAndExpressions::ProhibitMagicNumbers]
allowed_values = all_integers

# Turn off warning, since the penalty is on perls less than 5.18, which is not
# super common in my life
[-Modules::RequireNoMatchVarsWithUseEnglish]

# Backticks are mostly fine and significantly simpler than using IPC::Open3,
# so allow them when there's a return value
[InputOutput::ProhibitBacktickOperators]
only_in_void_context = 1

# Allow me to skip unpacking @_ for very short subroutines
[Subroutines::RequireArgUnpacking]
short_subroutine_statements = 1

# Allow terminal Log::Log4perl functions
[Subroutines::RequireFinalReturn]
terminal_funcs = LOGDIE LOGEXIT

# Bump these up from level 1 to level 2
[ValuesAndExpressions::ProhibitInterpolationOfLiterals]
severity = 2
[CodeLayout::ProhibitParensWithBuiltins]
severity = 2
# Lower from level 2 to level 1
[Modules::RequireVersionVar]
severity = 1
# Lower from level 3 to level 2
# [ErrorHandling::RequireCarping]
# severity = 2

# Haha no
[InputOutput::RequireCheckedSyscalls]
functions = :builtins
exclude_functions = print


## I do not agree with these, so never load them
# [-CodeLayout::ProhibitHardTabs]
# Requires /m flag on regex (^ and $ match line not just string)
[-RegularExpressions::RequireLineBoundaryMatching]
# Require /s flag on regex (. matches \n)
[-RegularExpressions::RequireDotMatchAnything]
# Don't escape before { } ( ) . * + ? | #
[-RegularExpressions::ProhibitEscapedMetacharacters]
# Don't whine about using die or warn instead of croak or carp
[-ErrorHandling::RequireCarping]
# Don't demand long numbers have underscores, that's absurd
[-ValuesAndExpressions::RequireNumberSeparators]
# Don't worry about capitalization of variables, camelCase rules anyway
[-NamingConventions::Capitalization]
# Similar to Pulp's newline below; technically easier, but nah
[-CodeLayout::RequireTrailingCommas]

## Perl::Critic::Bangs https://metacpan.org/pod/Perl::Critic::Bangs
# Allow TODOs, etc.
[-Bangs::ProhibitFlagComments]
# Raise to severity 4 from 3, despite being largely cosmetic
[Bangs::ProhibitNumberedNames]
severity = 4
[Bangs::ProhibitVagueNames]
severity = 4

## Perl::Critic::Pulp https://metacpan.org/pod/Perl::Critic::Pulp
# This feels like it should be much higher!  Annoying duplication in flycheck?
[ValuesAndExpressions::ProhibitArrayAssignAref]
severity = 5
# Yes, easier to maintain, but unnecessary, and I prefer the visual difference
# for the last item, just as with JavaScript
[-CodeLayout::RequireTrailingCommaAtNewline]

## Perl::Critic::Community https://metacpan.org/pod/Perl::Critic::Community
# Require while <> to do while my $line <>.  I *do* agree it's better, but
# somtimes I just want something short and $_ is *very* Perlish.
# Lower severity to 3 from 4
[Community::WhileDiamondDefaultAssignment]
severity = 3